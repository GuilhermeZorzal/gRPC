services:
  client:
    build: ./client
    container_name: ${CLIENT_CONTAINER_NAME}
    ports:
      - ${CLIENT_PORT}
    volumes:
      - type: bind
        source: ./teste.proto
        target: /app/teste.proto
    # restart: always
    depends_on:
      - server
      - db
    networks:
        - net1

  server:
    build: ./server
    container_name: serverGRPC
    ports:
      - ${SERVER_PORT}
    volumes:
      - type: bind
        source: ./teste.proto
        target: /app/teste.proto
    # restart: always
    depends_on:
      - db
    networks:
        - net1

  db:
    image: ${DATABASE_IMAGE}
    container_name: ${DATABASE_CONTAINER_NAME}
    environment:
      POSTGRES_DATABASE: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - ${DATABASE_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
        - net1

volumes:
  postgres_data:

networks:
  net1:
    driver: bridge
